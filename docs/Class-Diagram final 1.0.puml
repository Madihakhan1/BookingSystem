@startuml

package Entities {
    abstract class User {
        - String email
        - String name
        - String phone
        - String password
        - boolean isAdmin
        - String status
        + User(String email, String name, String status)
        + User(String email, String name, String phone, String password)
        + User(String email, String name)
        + String getEmail()
        + void setEmail(String email)
        + String getName()
        + void setName(String name)
        + String getPhone()
        + void setPhone(String phone)
        + String getPassword()
        + void setPassword(String password)
        + boolean isAdmin()
        + void setAdmin(boolean isAdmin)
        + String getStatus()
        + void setStatus(String status)
    }

    class Student extends User {
        - String password
        - String status
        + Student(String email, String name, String phone, String status, String password)
        + Student(String email, String name, String password)
        + String getPassword()
        + void setPassword(String password)
        + String getStatus()
        + void setStatus(String status)
    }

    class Admin extends User {
        + Admin(String email, String name, String phone, String password)
    }

    class Item {
        - String item_name
        - String description
        - String category
        - String status
        + Item(String item_name, String description, String category, String status)
        + String getItem_name()
        + void setItem_name(String item_name)
        + String getDescription()
        + void setDescription(String description)
        + String getCategory()
        + void setCategory(String category)
        + String getStatus()
        + void setStatus(String status)
    }

    class Booking {
        - int bookingId
        - String itemName
        - String email
        - LocalDate bookingDate
        - int days
        - String comment
        - String bookingStatus
        - String name
        + Booking(String itemName, String email, LocalDate bookingDate, int days, String comment, String bookingStatus)
        + Booking(int bookingId, String itemName, String email, String name, LocalDate bookingDate, int days, String comment, String bookingStatus)
        + int getBookingId()
        + void setBookingId(int bookingId)
        + String getItemName()
        + void setItemName(String itemName)
        + String getEmail()
        + void setEmail(String email)
        + LocalDate getBookingDate()
        + void setBookingDate(LocalDate bookingDate)
        + int getDays()
        + void setDays(int days)
        + String getComment()
        + void setComment(String comment)
        + String getBookingStatus()
        + void setBookingStatus(String bookingStatus)
        + String getName()
        + void setName(String name)
    }
}

package "Controllers" {
 class AdminController {
     + void addRoutes(Javalin app, ConnectionPool dbConnection)
     + void doLogin(Context ctx, ConnectionPool dbConnection)
     + void doLogout(Context ctx)
     + void adminPage(Context ctx)
     + void addStudent(Context ctx, ConnectionPool dbConnection)
     + void showStudents(Context ctx, ConnectionPool dbConnection)
     + void showBookingOverview(Context ctx, ConnectionPool dbConnection)
     + void updateBookingStatus(Context ctx, ConnectionPool dbConnection)
     + void deleteBooking(Context ctx, ConnectionPool dbConnection)
 }

 class BookingController {
     + void addRoutes(Javalin app, ConnectionPool dbConnection)
     + void doBookEquipment(Context ctx, ConnectionPool dbConnection)
 }

 class ItemController {
     + void addRoutes(Javalin app, ConnectionPool dbConnection)
     + void showEquipment(Context ctx, ConnectionPool dbConnection)
 }

 class StudentController {
     + void addRoutes(Javalin app, ConnectionPool dbConnection)
     + void getAllStudents(Context ctx, ConnectionPool dbConnection)
     + void createStudent(Context ctx, ConnectionPool dbConnection)
     + void showBookingPage(Context ctx, ConnectionPool dbConnection)
 }
}

package Mappers {
  class AdminMapper {
      + Admin login(String email, String password, ConnectionPool dbConnection) : Admin throws Exception
  }

  class BookingMapper {
      + void addBooking(Booking booking, ConnectionPool dbConnection) : void throws SQLException
      + List<Booking> getAllBookingsWithDetails(ConnectionPool dbConnection) : List<Booking> throws DatabaseException
      + List<Booking> getBookingsByStudentEmail(String email, ConnectionPool dbConnection) : List<Booking> throws SQLException
      + void updateBookingStatus(int bookingId, String status, ConnectionPool dbConnection) : void throws DatabaseException
      + void deleteBooking(int bookingId, ConnectionPool dbConnection) : void throws DatabaseException
  }

  class ItemMapper {
      + List<Item> getAllItems(ConnectionPool dbConnection) : List<Item> throws Exception
  }

  class StudentMapper {
      + List<Student> getAllStudents(ConnectionPool pool) : List<Student> throws DatabaseException
      + void createStudent(String name, String email, String phone, String password, ConnectionPool pool) : void throws DatabaseException
      + void addStudent(Student student, ConnectionPool dbConnection) : void throws Exception
      + Student login(String email, String password, ConnectionPool dbConnection) : Student throws DatabaseException
  }
}


Student  --o  Booking
Booking --* Item
Admin --> User
Student --> User
Admin --o Booking

StudentController --> StudentMapper
ItemController --> ItemMapper
BookingController --> BookingMapper
AdminController --> AdminMapper

AdminController --> StudentMapper
AdminController --> ItemMapper
AdminController --> BookingMapper

@enduml
